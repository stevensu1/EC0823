# 开发环境配置示例
# 用于演示不同环境下的数据库配置

# 开发环境
development.database.url=jdbc:mysql://localhost:3306/test_dev?useSSL=false&serverTimezone=UTC
development.database.username=dev_user
development.database.password=dev_password
development.database.pool.maxSize=5
development.database.pool.minIdle=1

# 测试环境
test.database.url=jdbc:mysql://test-server:3306/test_qa?useSSL=false&serverTimezone=UTC
test.database.username=qa_user
test.database.password=qa_password
test.database.pool.maxSize=8
test.database.pool.minIdle=2

# 生产环境
production.database.url=jdbc:mysql://prod-cluster:3306/production?useSSL=true&serverTimezone=UTC
production.database.username=prod_user
production.database.password=strong_prod_password
production.database.pool.maxSize=20
production.database.pool.minIdle=5
production.database.pool.connectionTimeout=60000
production.database.pool.idleTimeout=300000

# 使用方法说明：

# 1. 通过系统属性指定环境：
# java -Denv=production -jar your-app.jar

# 2. 通过环境变量覆盖配置：
# export DATABASE_URL=jdbc:mysql://custom-server:3306/custom_db
# export DATABASE_USERNAME=custom_user
# export DATABASE_PASSWORD=custom_password

# 3. 通过系统属性覆盖单个配置：
# java -Ddatabase.pool.maxSize=50 -jar your-app.jar

# 4. Docker 环境变量配置示例：
# docker run -e DATABASE_URL=jdbc:mysql://mysql-container:3306/app \
#            -e DATABASE_USERNAME=app_user \
#            -e DATABASE_PASSWORD=secure_password \
#            -e DATABASE_POOL_MAX_SIZE=15 \
#            your-app-image